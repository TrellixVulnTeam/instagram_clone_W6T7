{"version":3,"sources":["firebase.js","Post.js","ImageUpload.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","storage","Post","postId","user","username","caption","imageURL","useState","comments","setComments","comment","setComment","useEffect","unsubscribe","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","className","Avatar","alt","src","text","type","placeholder","value","onChange","e","target","disabled","onClick","event","preventDefault","add","displayName","timestamp","FieldValue","serverTimestamp","ImageUpload","image","setImage","progress","setProgress","setCaption","max","files","Button","ref","name","put","on","Math","round","bytesTransferred","totalBytes","error","console","log","alert","message","child","getDownloadURL","then","url","imageUrl","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","App","modalStyle","classes","posts","setPosts","open","setOpen","setUsername","email","setEmail","password","setPassword","setUser","openSignIn","setOpenSignIn","onAuthStateChanged","authUser","id","post","Modal","onClose","style","Input","createUserWithEmailAndPassword","updateProfile","catch","signInWithEmailAndPassword","signOut","key","clientAccessToken","maxWidth","hideCaption","containerTagName","protocol","injectScript","onLoading","onSuccess","onAfterRender","onFailure","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQAqBMA,G,wBADMC,IAASC,cAXE,CACnBC,OAAQ,0CACRC,WAAY,wCACZC,YAAa,4DACbC,UAAW,wBACXC,cAAe,oCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAIRT,IAASU,aACdC,EAAOX,IAASW,OAChBC,EAAUZ,IAASY,UCkEVC,MAlFf,YAA4D,IAA7CC,EAA4C,EAA5CA,OAAQC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,SAC5C,EAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KA8BA,OA5BAC,qBAAU,WACN,IAAIC,EAYJ,OAXIX,IACAW,EAAc1B,EACT2B,WAAW,SACXC,IAAIb,GACJY,WAAW,YACXE,QAAQ,YAAa,OACrBC,YAAW,SAACC,GACTT,EAAYS,EAASC,KAAKC,KAAI,SAACL,GAAD,OAASA,EAAIM,eAIhD,WACHR,OAEL,CAACX,IAaA,yBAAKoB,UAAU,QAEX,yBAAKA,UAAY,gBACb,kBAACC,EAAA,EAAD,CACAD,UAAU,eACVE,IAAKpB,EACLqB,IAAI,gCAGJ,4BAAKrB,IAIT,yBAAKkB,UAAY,cAAcG,IAAOnB,EAAUkB,IAAI,KAGpD,wBAAIF,UAAU,cAAd,IAA4B,gCAASlB,GAArC,IAAyDC,GAEzD,yBAAKiB,UAAU,kBACVd,EAASY,KAAI,SAACV,GAAD,OACV,2BACI,gCAASA,EAAQN,UADrB,IACyCM,EAAQgB,UAKxDvB,GAAS,0BAAkBmB,UAAU,oBAClC,2BACIA,UAAU,cACVK,KAAK,OACLC,YAAY,mBACZC,MAAOnB,EACPoB,SAAU,SAACC,GAAD,OAAOpB,EAAWoB,EAAEC,OAAOH,UAEzC,4BACII,UAAWvB,EACXY,UAAU,eACVK,KAAK,SACLO,QAjDI,SAACC,GACjBA,EAAMC,iBACNjD,EAAG2B,WAAW,SAASC,IAAIb,GAAQY,WAAW,YAAYuB,IAAI,CAC1DX,KAAMhB,EACNN,SAAUD,EAAKmC,YACfC,UAAWnD,IAASU,UAAU0C,WAAWC,oBAE7C9B,EAAW,MAsCH,W,2CCKD+B,MAtEf,YAAkC,IAAZtC,EAAW,EAAXA,SAClB,EAA0BG,mBAAS,MAAnC,mBAAOoC,EAAP,KAAcC,EAAd,KACA,EAAgCrC,mBAAS,GAAzC,mBAAOsC,EAAP,KAAiBC,EAAjB,KACA,EAA8BvC,mBAAS,IAAvC,mBAAOF,EAAP,KAAgB0C,EAAhB,KAsDA,OACI,yBAAKzB,UAAU,eAEX,8BAAUA,UAAU,oBAAoBO,MAAOgB,EAAUG,IAAI,QAC7D,2BAAOrB,KAAK,OAAOC,YAAc,qBAAqBE,SAAU,SAAAK,GAAK,OAAGY,EAAWZ,EAAMH,OAAOH,UAChG,2BAAOF,KAAK,OAAOG,SAzDN,SAACC,GACfA,EAAEC,OAAOiB,MAAM,IACdL,EAASb,EAAEC,OAAOiB,MAAM,OAwDxB,kBAACC,EAAA,EAAD,CAAQ5B,UAAU,sBAAsBY,QApD3B,WAUElC,EAAQmD,IAAR,kBAAuBR,EAAMS,OAAQC,IAAIV,GAEjDW,GACP,iBACA,SAACpC,GAEG,IAAM2B,EAAWU,KAAKC,MAAOtC,EAASuC,iBAAmBvC,EAASwC,WAAc,KAChFZ,EAAYD,MAEhB,SAACc,GAEGC,QAAQC,IAAIF,GACZG,MAAMH,EAAMI,YAEhB,WAEI/D,EACCmD,IAAI,UACJa,MAAMrB,EAAMS,MACZa,iBACAC,MAAK,SAAAC,GAEFhF,EAAG2B,WAAW,SAASuB,IAAI,CACvBE,UAAWnD,IAASU,UAAU0C,WAAWC,kBACzCpC,QAASA,EACT+D,SAAUD,EACV/D,SAAUA,IAEd0C,EAAY,GACZC,EAAW,IACXH,EAAS,cAYjB,Y,QC3DZ,SAASyB,IAIP,MAAO,CACLC,IAAI,GAAD,OAJO,GAIP,KACHC,KAAK,GAAD,OAJO,GAIP,KACJC,UAAU,cAAD,OANC,GAMD,eALE,GAKF,OAIb,IAAMC,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,MAAO,CACLC,SAAU,WACVC,MAAO,IACPC,gBAAiBJ,EAAMK,QAAQC,WAAWL,MAC1CM,OAAQ,iBACRC,UAAWR,EAAMS,QAAQ,GACzBC,QAASV,EAAMW,QAAQ,EAAG,EAAG,QA8MlBC,MA1Mf,WACE,MAAqBhF,mBAAS8D,GAAvBmB,EAAP,oBACMC,EAAUhB,IAEhB,EAA0BlE,mBAAS,IAAnC,mBAAOmF,EAAP,KAAcC,EAAd,KACA,EAAwBpF,oBAAS,GAAjC,mBAAOqF,EAAP,KAAaC,EAAb,KACA,EAAgCtF,mBAAS,IAAzC,mBAAOH,EAAP,KAAiB0F,EAAjB,KACA,EAA0BvF,mBAAS,IAAnC,mBAAOwF,EAAP,KAAcC,EAAd,KACA,EAAgCzF,mBAAS,IAAzC,mBAAO0F,EAAP,KAAiBC,EAAjB,KACA,EAAwB3F,mBAAS,MAAjC,mBAAOJ,EAAP,KAAagG,EAAb,KACA,EAAoC5F,mBAAS,IAA7C,mBAAO6F,EAAP,KAAmBC,EAAnB,KA4DA,OA1DAzF,qBAAU,WACR,IAAMC,EAAcd,EAAKuG,oBAAmB,SAACC,GACxCA,GAED3C,QAAQC,IAAI0C,GACZJ,EAAQI,IAIRJ,EAAQ,SAIZ,OAAO,WAELtF,OAED,CAACV,EAAMC,IA8BVQ,qBAAW,WACTzB,EAAG2B,WAAW,SAASE,QAAQ,YAAa,QAAQC,YAAW,SAAAC,GAE7DyE,EAASzE,EAASC,KAAKC,KAAI,SAAAL,GAAG,MAAK,CAChCyF,GAAIzF,EAAIyF,GACRC,KAAM1F,EAAIM,iBAGd,IAID,yBAAKC,UAAU,OAGb,kBAACoF,EAAA,EAAD,CACEd,KAAMA,EACNe,QAAS,kBAAMd,GAAQ,KAEvB,yBAAKe,MAAOpB,EAAYlE,UAAamE,EAAQb,OAC3C,0BAAMtD,UAAY,eAChB,gCACE,yBACEA,UAAW,mBACXG,IAAM,wFACND,IAAK,MAGT,kBAACqF,EAAA,EAAD,CACEjF,YAAY,WACZD,KAAK,OACLE,MAAOzB,EACP0B,SAAU,SAACC,GAAD,OAAO+D,EAAY/D,EAAEC,OAAOH,UAExC,kBAACgF,EAAA,EAAD,CACEjF,YAAY,QACZD,KAAK,OACLE,MAAOkE,EACPjE,SAAU,SAACC,GAAD,OAAOiE,EAASjE,EAAEC,OAAOH,UAGrC,kBAACgF,EAAA,EAAD,CACEjF,YAAY,WACZD,KAAK,WACLE,MAAOoE,EACPnE,SAAU,SAACC,GAAD,OAAOmE,EAAYnE,EAAEC,OAAOH,UAExC,kBAACqB,EAAA,EAAD,CAAQvB,KAAK,SAASO,QA1EjB,SAACC,GACdA,EAAMC,iBACNrC,EAAK+G,+BAA+Bf,EAAOE,GAC1C/B,MAAK,SAACqC,GACL,OAAOA,EAASpG,KAAK4G,cAAc,CACjCzE,YAAalC,IACZ8D,MAAK,eAGL8C,OAAM,SAACrD,GAAD,OAAWG,MAAMH,EAAMI,eAEjCiD,OAAM,SAACrD,GAAD,OAAWG,MAAMH,EAAMI,YAE9B8B,GAAQ,KA6DA,cAON,kBAACa,EAAA,EAAD,CACEd,KAAMQ,EACNO,QAAS,kBAAMN,GAAc,KAE7B,yBAAKO,MAAOpB,EAAYlE,UAAamE,EAAQb,OAC3C,0BAAMtD,UAAY,eAChB,gCACE,yBACEA,UAAW,mBACXG,IAAM,wFACND,IAAK,MAGT,kBAACqF,EAAA,EAAD,CACEjF,YAAY,QACZD,KAAK,OACLE,MAAOkE,EACPjE,SAAU,SAACC,GAAD,OAAOiE,EAASjE,EAAEC,OAAOH,UAGrC,kBAACgF,EAAA,EAAD,CACEjF,YAAY,WACZD,KAAK,WACLE,MAAOoE,EACPnE,SAAU,SAACC,GAAD,OAAOmE,EAAYnE,EAAEC,OAAOH,UAExC,kBAACqB,EAAA,EAAD,CAAQvB,KAAK,SAASO,QA1FjB,SAACC,GACdA,EAAMC,iBAENrC,EAAKkH,2BAA2BlB,EAAOE,GACtCe,OAAM,SAACrD,GAAD,OAAWG,MAAMH,EAAMI,YAE9BsC,GAAc,KAoFN,cAON,yBAAK/E,UAAU,eACb,yBACEA,UAAW,mBACXG,IAAM,wFACND,IAAK,KAENrB,EACD,kBAAC+C,EAAA,EAAD,CAAQhB,QAAS,kBAAMgF,YAAQnH,GAAMmE,MAAK,iBAA1C,WAIE,yBAAK5C,UAAY,uBACf,kBAAC4B,EAAA,EAAD,CAAQhB,QAAS,kBAAMmE,GAAc,KAArC,WACA,kBAACnD,EAAA,EAAD,CAAQhB,QAAS,kBAAM2D,GAAQ,KAA/B,aAMN,yBAAKvE,UAAU,cACb,yBAAKA,UAAU,mBAEXoE,EAAMtE,KAAI,gBAAEoF,EAAF,EAAEA,GAAIC,EAAN,EAAMA,KAAN,OACR,kBAAC,EAAD,CAAMU,IAAOX,EAAItG,OAAUsG,EAC3BrG,KAAMA,EAAMC,SAAUqG,EAAKrG,SAAUC,QAASoG,EAAKpG,QAASC,SAAUmG,EAAKrC,eAIjF,yBAAK9C,UAAU,oBACb,kBAAC,IAAD,CACE6C,IAAI,2CACJiD,kBAAkB,wBAClBC,SAAU,IACVC,aAAa,EACbC,iBAAiB,MACjBC,SAAS,GACTC,cAAY,EACZC,UAAW,aACXC,UAAW,aACXC,cAAe,aACfC,UAAW,WAAO/D,MAAM,eAMzB,OAAJ3D,QAAI,IAAJA,OAAA,EAAAA,EAAMmC,aACP,kBAAC,EAAD,CAAalC,SAAUD,EAAKmC,cAE1B,mEC1NOwF,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB9D,MAAK,YAAkD,IAA/C+D,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.95e55ab8.chunk.js","sourcesContent":["import firebase from 'firebase/compat/app';\nimport { initializeApp } from 'firebase/app';\nimport { getFirestore, collection, getDocs } from 'firebase/firestore';\nimport { getAuth, createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { getStorage, ref, uploadBytes } from \"firebase/storage\";\nimport 'firebase/compat/storage';\nimport 'firebase/compat/firestore';\nimport 'firebase/compat/auth';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAB_ar0XTZIGfsNEcQK-LuQ5P7H2SK0bL0\",\n    authDomain: \"instagram-clone-5b2d2.firebaseapp.com\",\n    databaseURL: \"https://instagram-clone-5b2d2-default-rtdb.firebaseio.com\",\n    projectId: \"instagram-clone-5b2d2\",\n    storageBucket: \"instagram-clone-5b2d2.appspot.com\",\n    messagingSenderId: \"960229464166\",\n    appId: \"1:960229464166:web:7818651769f060e922b5a7\",\n    measurementId: \"G-3K3FTP77LS\"\n};\n\nconst app = firebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore();\nconst auth = firebase.auth();\nconst storage = firebase.storage();\n\nexport { db, auth, storage };","import React, { useState, useEffect } from 'react'\nimport './Post.css'\nimport firebase from 'firebase/compat/app';\nimport Avatar from '@mui/material/Avatar'\nimport { db, auth } from './firebase';\nimport 'firebase/compat/firestore';\n\nfunction Post({postId, user, username, caption, imageURL}) {\n    const [comments, setComments] = useState([]);\n    const [comment, setComment] = useState('');\n\n    useEffect(() => {\n        let unsubscribe;\n        if (postId) {\n            unsubscribe = db\n                .collection(\"posts\")\n                .doc(postId)\n                .collection(\"comments\")\n                .orderBy('timestamp', 'asc')\n                .onSnapshot((snapshot) => {\n                    setComments(snapshot.docs.map((doc) => doc.data()));\n                })\n        }\n\n        return () => {\n            unsubscribe();\n        };\n    }, [postId]);\n\n    const postComment = (event) => {\n        event.preventDefault();\n        db.collection(\"posts\").doc(postId).collection(\"comments\").add({\n            text: comment,\n            username: user.displayName,\n            timestamp: firebase.firestore.FieldValue.serverTimestamp()\n        });\n        setComment('');\n    }\n\n    return (\n        <div className=\"post\">\n            {/* header->avatar+username */}\n            <div className = \"post__header\">\n                <Avatar \n                className=\"post__avatar\"\n                alt={username} \n                src=\"/static/images/avatar/1.jpg\" \n                />\n\n                <h3>{username}</h3>\n            </div>\n\n            {/* image */}\n            <img className = \"post__image\" src = {imageURL} alt=\"\" />\n\n            {/* username+caption */}\n            <h4 className=\"post__text\"> <strong>{username}</strong> {caption}</h4>\n\n            <div className=\"post__comments\">\n                {comments.map((comment) => (\n                    <p>\n                        <strong>{comment.username}</strong> {comment.text}\n                    </p>\n                ))}\n            </div>\n        \n            {user && (<form             className=\"post__commentBox\">\n                <input \n                    className=\"post__input\"\n                    type=\"text\"\n                    placeholder=\"Add a comment...\"\n                    value={comment}\n                    onChange={(e) => setComment(e.target.value)}\n                />\n                <button\n                    disabled={!comment}\n                    className=\"post__button\"\n                    type=\"submit\"\n                    onClick={postComment}\n                >\n                Post\n                </button>\n\n            </form>)}\n        \n        </div>\n    )\n}\n\nexport default Post\n","import { Button } from '@material-ui/core'\nimport React, { useState } from 'react'\nimport { storage, db } from \"./firebase\"\n// import { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/storage';\nimport 'firebase/compat/firestore';\nimport './ImageUpload.css';\n\nfunction ImageUpload({username}) {\n    const [image, setImage] = useState(null);\n    const [progress, setProgress] = useState(0);\n    const [caption, setCaption] = useState('');\n\n    const handleChange = (e) => {\n        if(e.target.files[0]) { //get the first file user selected\n            setImage(e.target.files[0]);\n        }\n    }\n\n    const handleUpload = () => {\n        // const storageRef = ref(storage);\n        // // Points to 'images'\n        // const imagesRef = ref(storageRef, 'images');\n        // const fileName = image.name;\n        // const spaceRef = ref(imagesRef, fileName);\n        // // File path is 'images/space.jpg'\n        // const path = spaceRef.fullPath;\n        // const uploadTask = ref(storage, path).put(image);\n\n        const uploadTask = storage.ref(`/images/${image.name}`).put(image);\n\n        uploadTask.on(\n            \"state_changed\",\n            (snapshot) => {\n                // progress function \n                const progress = Math.round((snapshot.bytesTransferred / snapshot.totalBytes) * 100); //progress indicator from 0 to 100\n                setProgress(progress);\n            },\n            (error) => {\n                // Error function\n                console.log(error);\n                alert(error.message);\n            },\n            () => {\n                // complete function\n                storage\n                .ref('images')\n                .child(image.name)\n                .getDownloadURL()\n                .then(url => {\n                    // post image in db\n                    db.collection(\"posts\").add({\n                        timestamp: firebase.firestore.FieldValue.serverTimestamp(), //we want the timestamp so that we can put recent posts at top regardless of where we are in the world\n                        caption: caption,\n                        imageUrl: url,\n                        username: username\n                    })\n                    setProgress(0);\n                    setCaption(\"\");\n                    setImage(null);\n                });\n            }\n        );\n    };\n\n    return (\n        <div className=\"imageUpload\">\n            {/* Caption input + File Picker + Post button */}\n            <progress className=\"progressIndicator\" value={progress} max=\"100\" />\n            <input type=\"text\" placeholder = 'Enter a caption...' onChange={event=> setCaption(event.target.value)}/>\n            <input type=\"file\" onChange={handleChange} />\n            <Button className=\"imageupload__button\" onClick={handleUpload}> \n                Upload\n            </Button>\n        </div>\n    )\n}\n\nexport default ImageUpload\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Post from './Post.js';\nimport { db, auth } from './firebase';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport { Button, Input } from '@material-ui/core';\nimport { signOut, signInWithEmailAndPassword } from \"firebase/auth\";\nimport ImageUpload from './ImageUpload';\nimport InstagramEmbed from 'react-instagram-embed';\n\n// require('firebase/auth');\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: \"absolute\",\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nfunction App() {\n  const [modalStyle] = useState(getModalStyle);\n  const classes = useStyles();\n\n  const [posts, setPosts] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [user, setUser] = useState(null);\n  const [openSignIn, setOpenSignIn] = useState('');\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((authUser) => {\n      if(authUser) {\n        //user has logged in\n        console.log(authUser);\n        setUser(authUser);\n      }\n      else {\n        //user logged out\n        setUser(null);\n      }\n    })\n\n    return () => {\n      //perform some cleanup actions\n      unsubscribe();\n    }\n  }, [user, username]);\n\n  // Sign Up backend\n  const signUp = (event) => {\n    event.preventDefault(); //so that it does not refresh everytime we enter a field\n    auth.createUserWithEmailAndPassword(email, password)\n    .then((authUser) => {\n      return authUser.user.updateProfile({\n        displayName: username\n      }).then(() => {\n        // Profile updated!\n        // console.log(\"profile updated\");\n      }).catch((error) => alert(error.message));\n    })\n    .catch((error) => alert(error.message))\n\n    setOpen(false);\n  };\n\n  // Sign In backend\n  const signIn = (event) => {\n    event.preventDefault();\n\n    auth.signInWithEmailAndPassword(email, password)\n    .catch((error) => alert(error.message));\n\n    setOpenSignIn(false);\n  }\n\n// useEffect runs a piece of code based on a specific condition\n  useEffect( () => {\n    db.collection('posts').orderBy('timestamp', 'desc').onSnapshot(snapshot => {\n      // every time a new post is ad ded, this code runs\n      setPosts(snapshot.docs.map(doc => ({\n         id: doc.id,\n         post: doc.data()\n        })));\n    })\n  }, []);\n\n\n  return (\n    <div className=\"app\">\n\n      {/* Sign Up Modal */}\n      <Modal\n        open={open}\n        onClose={() => setOpen(false)}\n        >\n        <div style={modalStyle} className = {classes.paper}>\n          <form className = \"app__signup\"> \n            <center>\n              <img \n                className= \"app__headerImage\"\n                src = \"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\"\n                alt =\"\"\n              />\n            </center>\n            <Input \n              placeholder=\"username\"\n              type=\"text\"\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n            />\n            <Input \n              placeholder=\"email\"\n              type=\"text\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n\n            <Input \n              placeholder=\"password\"\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <Button type=\"submit\" onClick={signUp}>Sign Up</Button>\n\n          </form>\n        </div>\n      </Modal>\n\n      {/* Sign In Modal */}\n      <Modal\n        open={openSignIn}\n        onClose={() => setOpenSignIn(false)}\n        >\n        <div style={modalStyle} className = {classes.paper}>\n          <form className = \"app__signup\"> \n            <center>\n              <img \n                className= \"app__headerImage\"\n                src = \"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\"\n                alt =\"\"\n              />\n            </center>\n            <Input \n              placeholder=\"email\"\n              type=\"text\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n\n            <Input \n              placeholder=\"password\"\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <Button type=\"submit\" onClick={signIn}>Sign In</Button>\n\n          </form>\n        </div>\n      </Modal>\n\n      {/* Header */}\n      <div className=\"app__header\">\n        <img \n          className= \"app__headerImage\"\n          src = \"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\"\n          alt =\"\"\n        />\n        {user ? (\n        <Button onClick={() => signOut(auth).then(() => {\n          // Sign-out successful.\n        })}>Log Out</Button>\n        ) : (\n          <div className = \"app__loginContainer\">\n            <Button onClick={() => setOpenSignIn(true)}>Sign In</Button>\n            <Button onClick={() => setOpen(true)}>Sign Up</Button>\n          </div>\n        )}\n      </div>\n      \n      {/* Posts */}\n      <div className=\"app__posts\">\n        <div className=\"app__posts_left\">\n          {\n            posts.map(({id, post}) => (\n              <Post key = {id} postId = {id} \n              user={user} username={post.username} caption={post.caption} imageURL={post.imageUrl} />\n            ))\n          }\n        </div>\n        <div className=\"app__posts_right\">\n          <InstagramEmbed\n            url='https://www.instagram.com/p/B_uf9dmAGPw/'\n            clientAccessToken='{appId}|{clientToken}'\n            maxWidth={320}\n            hideCaption={false}\n            containerTagName='div'\n            protocol=''\n            injectScript\n            onLoading={() => {}}\n            onSuccess={() => {}}\n            onAfterRender={() => {}}\n            onFailure={() => {alert(\"error\");}}\n          />\n        </div>\n      </div>\n\n      {/* Image Upload */}\n      {user?.displayName ? (\n      <ImageUpload username={user.displayName} />\n      ) : (\n        <h3>Sorry you need to login to upload</h3>\n      )}\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}